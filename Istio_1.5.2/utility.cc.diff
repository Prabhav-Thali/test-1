--- utility.cc	2020-06-17 01:11:28.927169818 -0700
+++ utility.cc.orig	2020-06-17 01:03:29.795778136 -0700
@@ -424,17 +424,19 @@
 }
 
 absl::uint128 Utility::Ip6ntohl(const absl::uint128& address) {
-  // TODO(ccaraman): Support Ip6ntohl for big-endian.
-  static_assert(ABSL_IS_LITTLE_ENDIAN,
-                "Machines using big-endian byte order is not supported for IPv6.");
-  return flipOrder(address);
+  #ifdef ABSL_IS_LITTLE_ENDIAN
+	return flipOrder(address);
+  #else
+        return address;
+  #endif
 }
 
 absl::uint128 Utility::Ip6htonl(const absl::uint128& address) {
-  // TODO(ccaraman): Support Ip6ntohl for big-endian.
-  static_assert(ABSL_IS_LITTLE_ENDIAN,
-                "Machines using big-endian byte order is not supported for IPv6.");
-  return flipOrder(address);
+  #ifdef ABSL_IS_LITTLE_ENDIAN
+	return flipOrder(address);
+  #else
+        return address;
+  #endif
 }
 
 absl::uint128 Utility::flipOrder(const absl::uint128& input) {
